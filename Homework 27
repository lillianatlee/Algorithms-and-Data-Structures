/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animatedbinarysearch;

import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;

/**
 *
 * @author lillianlinden
 */
public class AnimatedBinarySearch extends Application {
    final int n = 50, size = 20, toFind = 24;
    int[] arr = new int[n + 1];
    Rectangle[] rec = new Rectangle[n + 1];
    Color notTheNumber = Color.GRAY;
    Color maybeTheNumber = Color.AQUA;
    Color forSureTheNumber = Color.DEEPPINK;
    @Override
    public void start(Stage primaryStage) {
        HBox root = new HBox(1);
        for (int i = 0; i <= n; i++) {
            rec[i] = new Rectangle(size, size);
            rec[i].setFill(notTheNumber);
            rec[i].setStroke(Color.BLACK);
            arr[i] = (int)(Math.random() * 100);
            
        }
        
        Arrays.sort(arr);
        
        for (int i = 0; i <= n; i++) {
            StackPane stPane = new StackPane();
            stPane.getChildren().addAll(rec[i], new Label("" + arr[i]));
            root.getChildren().add(stPane);
        }
        
        new Thread(() -> {
            int l = 0, r = arr.length - 1;
            rec[l].setFill(maybeTheNumber);
            rec[r].setFill(maybeTheNumber);
            try { Thread.sleep(1000); } catch (InterruptedException ex) { }
            while (l <= r) {
                int m = (r + l) / 2;
                if (arr[m] == toFind) {
                    rec[m].setFill(forSureTheNumber);
                }
                else if (arr[m] > toFind) {
                    rec[r].setFill(notTheNumber);
                    r = m - 1;
                    rec[r].setFill(maybeTheNumber);
                }
                else {
                    rec[l].setFill(notTheNumber);
                    l = m + 1;
                    rec[l].setFill(maybeTheNumber);
                }
                try { Thread.sleep(1000); } catch (InterruptedException ex) { } 
            }
            for (int i = 0; i < n; i++) {
                rec[i].setFill(Color.CORAL);
            }
        }).start();
        
        
        Scene scene = new Scene(root);
        
        primaryStage.setTitle("Hello World!");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
    
    
}
